version: '3.8'

services:
  # Frontend (Next.js)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/kcrd_db
      - GEOAI_API_URL=http://geoai-api:8001
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
      - geoai-api
    networks:
      - kcrd-network

  # GeoAI Python API
  geoai-api:
    build:
      context: ./services/geoai-api
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/kcrd_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./services/geoai-api:/app
      - geoai-data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - kcrd-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=kcrd_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/database/init-simple.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - kcrd-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kcrd-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - geoai-api
    networks:
      - kcrd-network

volumes:
  postgres_data:
  redis_data:
  geoai-data:

networks:
  kcrd-network:
    driver: bridge
